{hidden}
There are several plugins that add SOAP support to Grails depending on your preferred approach. For Contract First SOAP services there is a [Spring WS|http://grails.org/plugin/springws] plugin, whilst if you want to generate a SOAP API from Grails services there are several plugins that do this including:
{hidden}

ยังมีปลั๊กอินอีกหลากหลายที่เพิ่มความสามารถในการสนัสนุน SOAP ให้กับ Grails สำหรับผู้ที่อยากจะเริ่มต้น อาจจะเริ่มโดยใช้ปลั๊กอินที่ชื่อว่า [Spring WS|http://grails.org/plugin/springws] plugin ในขณะเดียวกันถ้าคุณต้องการจะสร้าง SOAP API จาก Grails services ก็สามารถทำได้โดยปลั๊กอินดังต่อไปนี้

* "CXF":http://grails.org/plugin/cxf/ plugin which uses the "CXF":http://cxf.apache.org/ SOAP stack
* "Axis2":http://grails.org/plugin/axis2 plugin which uses "Axis2":http://ws.apache.org/axis2/
* "Metro":https://jax-ws-commons.dev.java.net/grails/ plugin which uses the "Metro":https://jax-ws-commons.dev.java.net/grails/ framework (and can also be used for [Contract First|http://docs.codehaus.org/pages/viewpage.action?pageId=88342530])

{hidden}
Most of the SOAP integrations integrate with Grails [services|guide:services] via the @exposes@ static property. This example is taken from the CXF plugin:
{hidden}

การใช้ SOAP กับ Grails นั่นโดยส่วนมากจะใช่ร่วมกับ Grails [services|guide:services] via the @exposes@ static property โดยนี้เป็นตัวอย่างที่ดึงมากจาก CXF plugin:

{code:java}
class BookService {

    static expose = ['cxf']

    Book[] getBooks() {
        Book.list() as Book[]
    }
}
{code}

{hidden}
The WSDL can then be accessed at the location: @http://127.0.0.1:8080/your_grails_app/services/book?wsdl@
{hidden}

โดยหลังจากที่รันแล้ว ตัว WSDL จะเข้าถึงได้จาก @http://127.0.0.1:8080/your_grails_app/services/book?wsdl@

{hidden}
For more information on the CXF plugin refer to [the documentation|http://grails.org/plugin/cxf] on the wiki.
{hidden}

สำหรับข้อมูลเพิ่มเติมของ CXF Plugin ก็สามารถดูได้จาก [the documentation|http://grails.org/plugin/cxf]