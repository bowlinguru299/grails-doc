Grails中也有service层的概念. Grails团队不鼓励在controller中嵌入核心应用逻辑，因为这样不利于代码的重用，也影响清晰的分层。

{hidden}
Grails defines the notion of a service layer. The Grails team discourages the embedding of core application logic inside controllers, as it does not promote reuse and a clean separation of concerns.
{hidden}

Grails中,应用的主要逻辑都放在的service层，controller负责处理请求流程。

{hidden}
Services in Grails are the place to put the majority of the logic in your application, leaving controllers responsible for handling request flow with redirects and so on.
{hidden}

h4. 创建一个Service

{hidden}
h4. Creating a Service
{hidden}

要创建一个Grails service,你只要进入命令行模式，在项目的根目录下，执行[create-service|commandLine]命令:

{hidden}
You can create a Grails service by running the [create-service|commandLine] command from the root of your project in a terminal window:
{hidden}

{code:java}
grails create-service helloworld.simple
{code}

{note}
如果create-service脚本中没有指定package，Grails会自动使用程序的名称为package的名称。
{note}

{hidden}
{note}
If no package is specified with the create-service script, Grails automatically uses the application name as the package name.
{note}
{hidden}

这样就会创建一个service，这个service位于@grails-app/services/helloworld/SimpleService.groovy@ .除了名字按照Grails的约定以@Service@结尾以外,这个文件就是一个普通的Groovy类:

{hidden}
The above example will create a service at the location @grails-app/services/helloworld/SimpleService.groovy@. A service's name ends with the convention @Service@, other than that a service is a plain Groovy class:
{hidden}

{code:java}
package helloworld

class SimpleService {
}
{code}
