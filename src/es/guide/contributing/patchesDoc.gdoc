{hidden}
Contributing to the documentation is much simpler from the core framework because there is a replica of the [http://github.com/grails/grails-doc|http://github.com/grails/grails-doc] project that anyone can request commit access on. So, if you want to submit patches to the documentation, you simply need to request commit access to the following repository [http://github.com/pledbrook/grails-doc|http://github.com/pledbrook/grails-doc] and commit your patches just as you would	 any other GitHub repository.
{hidden}

Contribuir a la documentación es mucho más simple de contribuir al núcleo debido a que existe una réplica del proyecto [http://github.com/grails/grails-doc|http://github.com/grails/grails-doc] a la que cualquiera puede solicitar el acceso de commit. Por lo tanto, si desea enviar contribuciones a la documentación, sólo hay que solicitar el acceso al repositorio siguiente [http://github.com/pledbrook/grails-doc|http://github.com/pledbrook/grails- doc] y hacer sus cambios de la misma manera que lo haría con cualquier otro repositorio de GitHub.

{hidden}
h3. Building the Guide
To build the documentation, simply type:
{hidden}

h3. La construcción de la Guía

Para construir la documentación, simplemente escriba:

{code}
./gradlew docs
{code}

{hidden}
Be warned: this command can take a while to complete and you should probably increase your Gradle memory settings by giving the @GRADLE_OPTS@ environment variable a value like
{hidden}

Tenga cuidado: este comando puede tardar un tiempo en ejecutarse y probablemente debería aumentar el tamaño de su memoria para gradle dando a la variable de entorno @GRADLE_OPTS@ un valor como este:

{code}
export GRADLE_OPTS="-Xmx512m -XX:MaxPermSize=384m"
{code}

{hidden}
Fortunately, you can reduce the overall build time with a couple of useful options. The first allows you to specify the location of the Grails source to use:
{hidden}

Afortunadamente, puede reducir el tiempo total de construcción con un par de opciones útiles. La primera le permite especificar la ubicación del código fuente de Grails a utilizar:

{code}
./gradlew -Dgrails.home=/home/user/projects/grails-core docs 
{code}

{hidden}
The Grails source is required because the guide links to its API documentation and the build needs to ensure it's generated. If you don't specify a @grails.home@ property, then the build will fetch the Grails source - a download of 10s of megabytes. It must then compile the Grails source which can take a while too.

Additionally you can create a local.properties file with this variable set:
{hidden}

El código fuente de Grails es necesario debido a los vínculos con la documentación de la API y la construcción garantizar que está generada. Si no se especifica la propiedad @grails.home@, entonces  se descarga este código Grails, una descarga de 10 megabytes. A continuación, debe compilar el código fuente Grails que puede tardar un rato también.

Además, puede crear un archivo de local.properties con esta variable:

{code}
grails.home=/home/user/projects/grails-core
{code}

{hidden}
or
{hidden}

o

{code}
grails.home=../grails-core
{code}

{hidden}
The other useful option allows you to disable the generation of the API documentation, since you only need to do it once:
{hidden}

La otra opción útil le permite desactivar la generación de la documentación de la API, ya que sólo necesita hacerlo una vez:

{code}
./gradlew -Ddisable.groovydocs=true docs
{code}

{hidden}
Again, this can save a significant amount of time and memory.

The main English user guide is generated in the @build/docs@ directory, with the @guide@ sub-directory containing the user guide part and the @ref@ folder containing the reference material. To view the user guide, simply open @build/docs/index.html@.
{hidden}

Una vez más esto puede ahorrar una cantidad significativa de tiempo y memoria.

La principal guía de usuario en Inglés se genera en el directorio @build/docs@, con el subdirectorio @guide@ que contiene la parte manual del usuario y la carpeta @ref@  que contiene el material de referencia. Para ver la guía del usuario, simplemente abra @build/docs/index.html@.

{hidden}
h3. Publishing
The publishing system for the user guide is the same as [the one for Grails projects|http://grails.org/doc/2.0.0.M1/guide/conf.html#docengine]. You write your chapters and sections in the gdoc wiki format which is then converted to HTML for the final guide. Each chapter is a top-level gdoc file in the @src/<lang>/guide@ directory. Sections and sub-sections then go into directories with the same name as the chapter gdoc but without the suffix.
{hidden}

h3. Publicación

El sistema de publicación de la guía del usuario es lo mismo que [el de los proyectos Grails| http://grails.org/doc/2.0.0.M1/guide/conf.html#docengine]. Escribe sus capítulos y secciones en el formato wiki gdoc que luego se convierten a HTML para la guía final. Cada capítulo es un archivo de gdoc de nivel superior en el directorio  @src/<lang>/guide@. Las secciones y subsecciones van en los directorios con el mismo nombre que el capítulo gdoc, pero sin el sufijo.
	
{hidden}
The structure of the user guide is defined in the @src/<lang>/guide/toc.yml@ file, which is a YAML file. This file also defines the (language-specific) section titles. If you add or remove a gdoc file, you must update the TOC as well!
{hidden}

La estructura de la guía del usuario se define en el archivo @src/<lang>/guide/toc.yml@, que es un archivo YAML. Este archivo también define los títulos de sección (específicas del idioma). Si se agrega o elimina un archivo gdoc, debe actualizar la tabla de contenido también.

{hidden}
The @src/<lang>/ref@ directory contains the source for the reference sidebar. Each directory is the name of a category, which also appears in the docs. Hence the directories need different names for the different languages. Inside the directories go the gdoc files, whose names match the names of the methods, commands, properties or whatever that the files describe.
{hidden}

El directorio @src/<lang>/ref@ contiene el fuente para la barra lateral de referencia. Cada directorio es el nombre de una categoría, que también aparece en la documentación. De ahí la necesidad de directorios de nombres diferentes para los distintos idiomas. Dentro de los directorios van los archivos gdoc, cuyos nombres coinciden con los nombres de los métodos, comandos, propiedades o lo que sea que los archivos describen.

{hidden}
h3. Translations
This project can host multiple translations of the user guide, with @src/en@ being the main one. To add another one, simply create a new language directory under @src@ and copy into it all the files under @src/en@. The build will take care of the rest.
{hidden}

h3. Traducciones

Este proyecto puede alojar múltiples traducciones de la guía del usuario, siendo @src/en@  el principal. Para agregar otro, basta con crear un directorio con el nuevo lenguaje en @src@ y copiar en ella todos los archivos de @src/es@. La construcción se hará cargo del resto.

{hidden}
Once you have a copy of the original guide, you can use the @\{hidden\}@ macro to wrap the English text that you have replaced, rather than remove it. This makes it easier to compare changes to the English guide against your translation. For example:
{hidden}

Una vez que haya una copia de la guía original, puede utilizar la macro @\{hidden\}@ para delimitar el texto en inglés que ha reemplazado, en lugar de eliminarlo. Esto hace que sea más fácil comparar los cambios en la guía de inglés en contra de su traducción. Por ejemplo:

{code}
\{hidden\}
When you create a Grails application with the [create-app|commandLine] command,
Grails doesn't automatically create an Ant @build.xml@ file but you can generate
one with the [integrate-with|commandLine] command:
\{hidden\}

Quando crias uma aplicação Grails com o comando [create-app|commandLine], Grails
não cria automaticamente um ficheiro de construção Ant @build.xml@ mas podes gerar
um com o comando [integrate-with|commandLine]:
{code}

{hidden}
Because the English text remains in your gdoc files, @diff@ will show differences on the English lines. You can then use the output of @diff@ to see which bits of your translation need updating. On top of that, the @\{hidden\}@ macro ensures that the text inside it is not displayed in the browser, although you can display it by adding this URL as a bookmark: @javascript:toggleHidden();@ (requires you to build the user guide with Grails 2.0 M2 or later).
{hidden}

Debido a que el texto inglés se mantiene en sus archivos gdoc, @diff@ mostará las diferencias en las líneas de inglés. A continuación, puede utilizar la salida de @diff@ para ver qué partes de su traducción deben actualizarse. Además de eso, la macro @\{hidden\}@ asegura que el texto dentro de él no se muestra en el navegador, aunque se puede visualizar mediante la adición de esta dirección URL como favorito: @javascript:toggleHidden();@ (requiere que se construya la guía del usuario con Grails 2.0 M2 o posterior).

{hidden}
Even better, you can use the @left_to_do.groovy@ script in the root of the project to see what still needs translating. You run it like so:
{hidden}

Aún mejor, puede utilizar el script @left_to_do.groovy@ en la raíz del proyecto para ver lo que aún queda traducir. Ejecutar esta manera:

{code}
./left_to_do.groovy es
{code}

{hidden}
This will then print out a recursive diff of the given translation against the reference English user guide. Anything in @\{hidden\}@ blocks that hasn't changed since being translated will _not_ appear in the diff output. In other words, all you will see is content that hasn't been translated yet and content that has changed since it was translated. Note that @\{code\}@ blocks are ignored, so you _don't_ need to include them inside @\{hidden\}@ macros.
{hidden}

Se imprimirá un diff recursivo de la traducción dada contra la guía de referencia de usuario en Inglés. Cualquier cosa en los bloques @\{hidden\}@ que no ha cambiado desde que fue traducido _no_ aparecen en la salida del diff. En otras palabras, todo lo que se ve es el contenido que no se ha traducido todavía y el contenido que ha cambiado desde que fue traducido. Tenga en cuenta que los bloques @\{code\}@ son ignorados, por lo que _no_ necesita incluir estos dentro de la macro @\{hidden\}@.

{hidden}
To provide translations for the headers, such as the user guide title and subtitle, just add language specific entries in the 'resources/doc.properties' file like so:
{hidden}

Para proporcionar traducciones de los títulos, como el título y el subtítulo guía del usuario, sólo tiene que añadir el lenguaje entradas específicas en el archivo 'resources/doc.properties' de este modo:

{code}
es.title=El framework Grails
es.subtitle=...
{code}

{hidden}
For each language translation, properties beginning @<lang>@. will override the standard ones. In the above example, the user guide title will be El Grails Framework for the Spanish translation. Also, translators can be credited by adding a '<lang>.translators' property:
{hidden}

Para cada traducción, las propiedades comenzando por @<lang>@ sobreescriben a las estándar. En el ejemplo anterior, el título de guía del usuario es El framework Grails para la traducción al español. Además, los traductores pueden ser acreditados mediante la adición de la propiedad '<lang>.translators':
	
{code}
fr.translators=Stéphane Maldini
{code}

{hidden}
This should be a comma-separated list of names (or the native language equivalent) and it will be displayed as a "Translated by" header in the user guide itself.
{hidden}

Esto debería ser una lista separada por comas de los nombres (o el equivalente en la lengua nativa) y se muestra como un "Translated by" en el encabezado de la guía.

{hidden}
You can build specific translations very easily using the @publishGuide_\*@ and @publishPdf_\*@ tasks. For example, to build both the French HTML and PDF user guides, simply execute
{hidden}

Usted puede construir traducciones específicas muy fácilmente utilizando las tareas @publishGuide_\*@ y @publishPdf_\*@. Por ejemplo, para construir tanto la guía francesa de usuario en HTML y PDF, simplemente ejecute

{code}
./gradlew publishPdf_fr
{code}

{hidden}
Each translation is generated in its own directory, so for example the French guide will end up in @build/docs/fr@. You can then view the translated guide by opening @build/docs/<lang>/index.html@.
{hidden}

Cada traducción se genera en su propio directorio, por lo que, por ejemplo, la guía francesa va a terminar en @build/docs/fr@. A continuación, puede ver el manual traducido abriendo @build/docs/<lang>/index.html@.
	
{hidden}
All translations are created as part of the [Hudson CI build for the grails-doc|http://hudson.grails.org/job/grails_docs_2.0.x/lastSuccessfulBuild/artifact/build/docs/] project, so you can easily see what the current state is without having to build the docs yourself.
{hidden}

Todas las traducciones se crean como parte de la [construcción de IC Hudson de grails-doc | http://hudson.grails.org/job/grails_docs_2.0.x/lastSuccessfulBuild/artifact/build/docs/] del proyecto, por lo que puede fácilmente ver cuál es el estado actual es, sin tener que generar los documentos usted mismo.