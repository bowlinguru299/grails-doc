{hidden}
If you want to submit patches to the project, you simply need to fork the repository on GitHub rather than clone it directly. Then you will commit your changes to your fork and send a pull request for a core team member to review.
{hidden}

Si desea enviar parches al proyecto, sólo tendrá que hacer un "fork" del repositorio en GitHub en lugar de clonarlo directamente. Entonces haga commit de los cambios a su fork y envie una "pull request" para que un miembro del equipo central lo revise.

{hidden}
h3. Forking and Pull Requests
One of the benefits of [GitHub|http://github.com] is the way that you can easily contribute to a project by [forking the repository|http://help.github.com/fork-a-repo/] and [sending pull requests|http://help.github.com/send-pull-requests/] with your changes.
{hidden}

h3. Forks y pull request 

Uno de los beneficios de [GitHub| http://github.com] es la forma en que puede contribuir a un proyecto [haciendo un fork de un repositorio | http://help.github.com/fork-a-repo/] y [enviando pull requests|http://help.github.com/send-pull-requests/] con los cambios.


{hidden}
What follows are some guidelines to help ensure that your pull requests are speedily dealt with and provide the information we need. They will also make your life easier!
{hidden}

Lo que sigue son algunas pautas para ayudar a asegurar que sus peticiones se tratan rápidamente, proporcionando la información que necesitamos. ¡También le hará la vida más fácil!

{hidden}
h4. Create a local branch for your changes

Your life will be greatly simplified if you create a local branch to make your changes on. For example, as soon as you fork a repository and clone the fork locally, execute
{hidden}

h4. Crear una rama local de los cambios

Su vida será mucho más fácil si se crea una rama local para realizar los cambios en ella. Por ejemplo, tan pronto como tenga un repositorio "forkeado" y este clonado a nivel local, ejecute

{code}
git checkout -b mine
{code}

{hidden}
This will create a new local branch called "mine" based off the "master" branch. Of course, you can name the branch whatever you like - you don't have to use "mine".
{hidden}

Esto creará una nueva rama local llamado "mine" basada en la rama "master". Por supuesto, usted puede nombrar a la rama como quiera, no tiene que utilizar "mine".

{hidden}
h4. Create JIRAs for non-trivial changes

For any non-trivial changes, raise a JIRA issue if one doesn't already exist. That helps us keep track of what changes go into each new version of Grails.
{hidden}

h4. Crear Jiras para cambios complicados

Para hacer cualquier cambio complicado, cree un asunto JIRA si no existe ya. Eso nos ayuda a no perder de vista los cambios que van en cada nueva versión de Grails.

{hidden}
h4. Include JIRA issue ID in commit messages

This may not seem particularly important, but having a JIRA issue ID in a commit message means that we can find out at a later date why a change was made. Include the ID in any and all commits that relate to that issue. If a commit isn't related to an issue, then there's no need to include an issue ID.
{hidden}

h4. Incluya el asunto JIRA ID en los mensajes de commit

Esto puede no parecer muy importante, pero tener un ID JIRA en un mensaje de commit significa que podemos encontrar a una fecha posterior por qué se realizó un cambio. Incluya la identificación en todos y cada uno de los commits que se refieren a esta cuestión. Si el commit no está relacionado con un asunto JIRA, entonces no hay necesidad de incluir un identificador de tema.

{hidden}
h4. Make sure your fork is up to date

Since the core developers must merge your commits into the main repository, it makes life much easier if your fork on GitHub is up to date before you send a pull request.
{hidden}

h4. Asegúrese de que el fork se encuentra actualizado

Dado que los principales desarrolladores deben combinar sus commits con el repositorio principal, se hace la vida mucho más fácil si el fork en GitHub está actualizado antes de enviar un pull request.

{hidden}
Let's say you have the main repository set up as a remote called "upstream" and you want to submit a pull request. Also, all your changes are currently on the local "mine" branch but not on "master". The first step involves pulling any changes from the main repository that have been added since you last fetched and merged:
{hidden}

Digamos que usted tiene en el repositorio principal configurado como uno remoto llamado "upstream" y desea presentar un pull request. Además, todos los cambios se encuentran actualmente en la rama  local "mine", pero no en el "master". El primer paso consiste en hacer pull de todos los cambios desde el repositorio principal que se han agregado desde la última vez que se actualizó:

{code}
git checkout master
git pull upstream
{code}

{hidden}
This should complete without any problems or conflicts. Next, rebase your local branch against the now up-to-date master:
{hidden}

Esto debería completarse sin ningún problema o conflicto. A continuación, haga "rebase" desde su rama contra la "master"" actualizada:

{code}
git checkout mine
git rebase master
{code}

{hidden}
What this does is rearrange the commits such that all of your changes come after the most recent one in master. Think adding some cards to the top of a deck rather than shuffling them into the pack.
{hidden}

Lo que hace es reorganizar el commit de tal manera que todos los cambios se producen después de los más recientes en el master. Piense en la adición de algunas tarjetas de la parte superior de una baraja en lugar de mezclarlas en el paquete.

{hidden}
You'll now be able to do a clean merge from your local branch to master:
{hidden}

Ahora vamos a ser capaces de hacer un merge desde la rama local al master:

{code}
git checkout master
git merge mine
{code}

{hidden}
Finally, you must push your changes to your remote repository on GitHub, otherwise the core developers won't be able to pick them up:
{hidden}

Por último, debe hacer push con los cambios al repositorio remoto en GitHub, de lo contrario los desarrolladores del núcleo no será capaz de recogerlos:

{code}
git push
{code}

{hidden}
You're now ready to send the pull request from the GitHub user interface.
{hidden}

Ahora está listo para enviar la solicitud de "pull request" con la interfaz de usuario de GitHub.

{hidden}
h4. Say what your pull request is for

A pull request can contain any number of commits and it may be related to any number of issues. In the pull request message, please specify the IDs of all issues that the request relates to. Also give a brief description of the work you have done, such as: "I refactored the data binder and added support for custom number editors (GRAILS-xxxx)".
{hidden}

h4. Diga para qué es el pull request

Un "pull request" puede contener cualquier número de commits y puede estar relacionado con una serie de asuntos. En el mensaje de "pull request", por favor, especifique el ID de todas los asuntos a los que la solicitud se refiere. También proporcione una breve descripción del trabajo que ha hecho, como por ejemplo: "He refactorizado el data binder y añadido soporte para los editores de número personalizados (Grails-xxxx)".
