{hidden}
To create a simple mapping simply use a relative URL as the method name and specify named parameters for the controller and action to map to:
{hidden}

Para crear un mapeo simple, simplemente use una URL relativa como el nombre del metodo y especifique los parametros nombrados para el controlador y la accion a mapear:

{code:java}
"/product"(controller: "product", action: "list")
{code}

{hidden}
In this case we've mapped the URL @/product@ to the @list@ action of the @ProductController@. Omit the action definition to map to the default action of the controller:
{hidden}

En este caso hemos mapeado la URL @/product@ hacia la accion @list@ del @ProductController@. Omitiendo la definicion de la accion a mapear hacia la accion por defecto del controllador:

{code:java}
"/product"(controller: "product")
{code}

{hidden}
An alternative syntax is to assign the controller and action to use within a block passed to the method:
{hidden}

Una sintaxis alternativa es asignar el controlador y la accion a usar dentro del bloque pasado al metodo:

{code:java}
"/product" {
    controller = "product"
    action = "list"
}
{code}

{hidden}
Which syntax you use is largely dependent on personal preference. To rewrite one URI onto another explicit URI (rather than a controller/action pair) do something like this:
{hidden}

Cual sintaxis usar es enormemente dependiente en su preferencia personal. Para reescribir una URI en otra URI explicita (en vez del par controlador/accion) haga algo asi:

{code}
"/hello"(uri: "/hello.dispatch")
{code}

{hidden}
Rewriting specific URIs is often useful when integrating with other frameworks
{hidden}

Reescribir URIs especificas es comunmente util cuando se integran con otros frameworks.
